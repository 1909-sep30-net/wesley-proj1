# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-wesley'
    organization: 'rev-test'
    scannerMode: 'MSBuild'
    projectKey: 'wesley-proj1'
    extraProperties: |
        sonar.exclusions=**/lib/**


- script: 
          dotnet build Project0 --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

  

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    projects: './wesley-proj1'
    arguments: '-c $(buildConfiguration) --collect "XPlat Code Coverage"'

# - task: PublishCodeCoverageResults@1
#   displayName: Publish code coverage
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: SonarCloudAnalyze@1
  displayName: Run SonarCloud analysis

- task: SonarCloudPublish@1
  displayName: Publish SonarCloud quality gate result

# - task: DotNetCoreCLI@2
#   displayName: dotnet publish + zip
#   inputs:
#     command: 'publish'
#     publishWebProjects: true
#     zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: App Service deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Free Trial(64170258-a548-4ce2-8294-a01b73c4af3d)'
    appType: 'webApp'
    WebAppName: 'RandomApp'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'